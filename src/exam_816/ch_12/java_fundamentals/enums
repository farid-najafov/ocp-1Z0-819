Key Points
 - An enum is a type that represents a FIXED list of values (you can think of these as constants), providing type safety.
 - Enums can define constructors, but they must be private. Otherwise, a compile-time error will be thrown.
 - Enums are implicitly public, static and final.
 - An enum can be created from a String using the case-sensitive valueOf() method.
 - To get all the enums of a certain type use the method values(), that returns an array of enums in the same order
    in which they were declared.
 - When the toString() method is invoked, it prints the name of the enumeration.
 - Enums can be compared against other enums using the == operator and the equals() method.
 - Enums can be used in switch statements.
 - Enums can implement interfaces, but they cannot extend from a class since they implicitly extend from java.lang.Enum.
 - Enums are the easiest way to implement singletons.