All the rules for when an overloaded method is called should be logical.
Java calls the most specific method it can. When some of the types interact,
Java rules focus on backward compatibility. Since old code still needs to work,
this means autoboxing and varargs come last when Java looks at overloaded methods.

The order that Java uses to choose the right overloaded method
--------------------------------------------------------------
Rule             Example of what will be chosen for glide(1,2)
Exact match by type         String glide(int i, int j)
Larger primitive type       String glide(long i, long j)
Autoboxed type              String glide(Integer i, Integer j)
Varargs String              glide(int... nums)

While trying to find a match Java will do only one conversion